{"version":3,"sources":["components/ContactItem/ContactItem.module.scss","components/Filter/Filter.module.scss","components/ContactList/ContactList.module.scss","components/Section/Section.module.scss","components/Container/Container.module.scss","components/Button/ButtonTypeButton.module.scss","components/Loader/Loader.module.scss","redux/contacts/contacts-actions.js","redux/contacts/contacts-reducer.js","redux/store.js","components/Container/Container.js","redux/contacts/contacts-selectors.js","components/ContactForm/ContactForm.js","components/Button/ButtonTypeButton.js","components/ContactItem/ContactItem.js","components/ContactList/ContactList.js","components/Filter/Filter.js","components/Section/Section.js","components/App/App.js","components/Loader/Loader.js","index.js","components/ContactForm/ContactForm.module.scss"],"names":["module","exports","addContact","createAction","name","number","payload","id","nanoid","deleteContact","changeFilter","items","createReducer","action","state","filter","contact","_","combineReducers","middleware","getDefaultMiddleware","serializableCheck","ignoredActions","FLUSH","REHYDRATE","PAUSE","PERSIST","PURGE","REGISTER","logger","contactsPersistConfig","key","storage","blacklist","store","configureStore","reducer","contacts","persistReducer","contactsReducer","devTools","process","persistor","persistStore","Container","children","className","s","getContacts","getFilter","getVisibleContacts","allContacts","normalizedFilter","toLowerCase","includes","ContactForm","useState","setName","setNumber","useSelector","dispatch","useDispatch","handleChange","e","target","value","reset","nameInputId","numberInputId","form","onSubmit","preventDefault","normalizedName","some","alert","contactsActions","label","htmlFor","labelText","input","type","onChange","pattern","title","required","button","Button","onClick","defaultProps","ContactItem","wrapper","size","fill","ContactList","list","map","item","onDeleteContact","Filter","Section","section","App","LoaderContainer","loaderContainer","color","height","width","timeout","ReactDOM","render","StrictMode","loading","Loader","document","getElementById"],"mappings":"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","file":"static/js/main.41b882a4.chunk.js","sourcesContent":["// extracted by mini-css-extract-plugin\nmodule.exports = {\"wrapper\":\"ContactItem_wrapper__2RWEq\",\"contact\":\"ContactItem_contact__kPkPH\"};","// extracted by mini-css-extract-plugin\nmodule.exports = {\"label\":\"Filter_label__2s8vs\",\"labelText\":\"Filter_labelText__d4nGN\",\"input\":\"Filter_input__2wrij\"};","// extracted by mini-css-extract-plugin\nmodule.exports = {\"item\":\"ContactList_item__9deDF\"};","// extracted by mini-css-extract-plugin\nmodule.exports = {\"section\":\"Section_section__2kQQJ\",\"title\":\"Section_title__27msg\"};","// extracted by mini-css-extract-plugin\nmodule.exports = {\"Container\":\"Container_Container__1Em6P\"};","// extracted by mini-css-extract-plugin\nmodule.exports = {\"button\":\"ButtonTypeButton_button__3ODun\"};","// extracted by mini-css-extract-plugin\nmodule.exports = {\"loaderContainer\":\"Loader_loaderContainer__37NAi\"};","import { createAction, nanoid } from \"@reduxjs/toolkit\";\r\n\r\nconst addContact = createAction(\"contacts/add\", function prepare(name, number) {\r\n  return {\r\n    payload: {\r\n      id: nanoid(),\r\n      name,\r\n      number,\r\n    },\r\n  };\r\n});\r\n\r\nconst deleteContact = createAction(\"contacts/delete\");\r\n\r\nconst changeFilter = createAction(\"contacts/changeFilter\");\r\n\r\n// eslint-disable-next-line import/no-anonymous-default-export\r\nexport default { addContact, deleteContact, changeFilter };\r\n","import { combineReducers } from \"redux\";\r\nimport { createReducer } from \"@reduxjs/toolkit\";\r\nimport action from \"./contacts-actions\";\r\n\r\nconst initialContactState = [\r\n  { id: \"id-1\", name: \"Rosie Simpson\", number: \"459-12-56\" },\r\n  { id: \"id-2\", name: \"Hermione Kline\", number: \"443-89-12\" },\r\n  { id: \"id-3\", name: \"Eden Clements\", number: \"645-17-79\" },\r\n  { id: \"id-4\", name: \"Annie Copeland\", number: \"227-91-26\" },\r\n];\r\n\r\nconst items = createReducer(initialContactState, {\r\n  [action.addContact]: (state, { payload }) => [payload, ...state],\r\n  [action.deleteContact]: (state, { payload }) =>\r\n    state.filter((contact) => contact.name !== payload),\r\n});\r\n\r\nconst filter = createReducer(\"\", {\r\n  [action.changeFilter]: (_, { payload }) => payload,\r\n});\r\n\r\nexport default combineReducers({\r\n  items,\r\n  filter,\r\n});\r\n","/* eslint-disable import/no-anonymous-default-export */\r\nimport { configureStore, getDefaultMiddleware } from \"@reduxjs/toolkit\";\r\nimport {\r\n  persistStore,\r\n  persistReducer,\r\n  FLUSH,\r\n  REHYDRATE,\r\n  PAUSE,\r\n  PERSIST,\r\n  PURGE,\r\n  REGISTER,\r\n} from \"redux-persist\";\r\nimport storage from \"redux-persist/lib/storage\"; // defaults to localStorage for web\r\nimport logger from \"redux-logger\";\r\nimport contactsReducer from \"./contacts/contacts-reducer\";\r\n\r\nconst middleware = [\r\n  ...getDefaultMiddleware({\r\n    serializableCheck: {\r\n      ignoredActions: [FLUSH, REHYDRATE, PAUSE, PERSIST, PURGE, REGISTER],\r\n    },\r\n  }),\r\n  logger,\r\n];\r\n\r\nconst contactsPersistConfig = {\r\n  key: \"contacts\",\r\n  storage,\r\n  blacklist: [\"filter\"],\r\n};\r\n\r\nconst store = configureStore({\r\n  reducer: {\r\n    contacts: persistReducer(contactsPersistConfig, contactsReducer),\r\n  },\r\n  middleware,\r\n  devTools: process.env.NODE_ENV !== \"production\",\r\n});\r\n\r\nconst persistor = persistStore(store);\r\n\r\nexport default { store, persistor };\r\n","import PropTypes from \"prop-types\";\r\nimport s from \"./Container.module.scss\";\r\n\r\nconst Container = ({ children }) => {\r\n  return <div className={s.Container}>{children}</div>;\r\n};\r\n\r\nContainer.propTypes = {\r\n  children: PropTypes.node.isRequired,\r\n};\r\n\r\nexport default Container;\r\n","export const getContacts = (state) => state.contacts.items;\r\nexport const getFilter = (state) => state.contacts.filter;\r\n\r\nexport const getVisibleContacts = (state) => {\r\n  const allContacts = getContacts(state);\r\n  const filter = getFilter(state);\r\n  const normalizedFilter = filter.toLowerCase();\r\n\r\n  return allContacts.filter((contact) =>\r\n    contact.name.toLowerCase().includes(normalizedFilter)\r\n  );\r\n};\r\n","import React, { useState } from \"react\";\r\nimport PropTypes from \"prop-types\";\r\nimport { nanoid } from \"nanoid\";\r\nimport contactsActions from \"../../redux/contacts/contacts-actions\";\r\nimport { useSelector, useDispatch } from \"react-redux\";\r\nimport { getContacts } from \"../../redux/contacts/contacts-selectors\";\r\nimport s from \"./ContactForm.module.scss\";\r\n\r\nfunction ContactForm() {\r\n  const [name, setName] = useState(\"\");\r\n  const [number, setNumber] = useState(\"\");\r\n\r\n  const contacts = useSelector(getContacts);\r\n  const dispatch = useDispatch();\r\n\r\n  const handleChange = (e) => {\r\n    const { name, value } = e.target;\r\n    switch (name) {\r\n      case \"name\":\r\n        setName(value);\r\n        break;\r\n      case \"number\":\r\n        setNumber(value);\r\n        break;\r\n      default:\r\n        return;\r\n    }\r\n  };\r\n\r\n  const handleSubmit = (e) => {\r\n    e.preventDefault();\r\n    const normalizedName = name.toLowerCase();\r\n    if (\r\n      contacts.some(\r\n        (contact) =>\r\n          contact.name.toLowerCase() === normalizedName ||\r\n          contact.number === number\r\n      )\r\n    ) {\r\n      alert(\r\n        `Contact with such ${name} name or ${number} number is already in Phonebook`\r\n      );\r\n      reset();\r\n      return;\r\n    }\r\n\r\n    dispatch(contactsActions.addContact(name, number));\r\n    reset();\r\n  };\r\n\r\n  const reset = () => {\r\n    setName(\"\");\r\n    setNumber(\"\");\r\n  };\r\n\r\n  const nameInputId = nanoid();\r\n  const numberInputId = nanoid();\r\n\r\n  return (\r\n    <form className={s.form} onSubmit={handleSubmit}>\r\n      <label className={s.label} htmlFor={nameInputId}>\r\n        <span className={s.labelText}>Name</span>\r\n        <input\r\n          className={s.input}\r\n          type=\"text\"\r\n          name=\"name\"\r\n          value={name}\r\n          onChange={handleChange}\r\n          pattern=\"^[a-zA-Zа-яА-Я]+(([' -][a-zA-Zа-яА-Я ])?[a-zA-Zа-яА-Я]*)*$\"\r\n          title=\"Имя может состоять только из букв, апострофа, тире и пробелов. Например Adrian, Jacob Mercer, Charles de Batz de Castelmore d'Artagnan и т. п.\"\r\n          required\r\n          id={nameInputId}\r\n        />\r\n      </label>\r\n      <label className={s.label} htmlFor={numberInputId}>\r\n        <span className={s.labelText}>Number</span>\r\n        <input\r\n          className={s.input}\r\n          type=\"tel\"\r\n          name=\"number\"\r\n          value={number}\r\n          onChange={handleChange}\r\n          pattern=\"\\+?\\d{1,4}?[-.\\s]?\\(?\\d{1,3}?\\)?[-.\\s]?\\d{1,4}[-.\\s]?\\d{1,4}[-.\\s]?\\d{1,9}\"\r\n          title=\"Номер телефона должен состоять цифр и может содержать пробелы, тире, круглые скобки и может начинаться с +\"\r\n          required\r\n          id={numberInputId}\r\n        />\r\n      </label>\r\n      <button type=\"submit\" className={s.button}>\r\n        Add Contact\r\n      </button>\r\n    </form>\r\n  );\r\n}\r\n\r\nContactForm.propTypes = {\r\n  contacts: PropTypes.arrayOf(\r\n    PropTypes.shape({\r\n      name: PropTypes.string,\r\n      namber: PropTypes.number,\r\n    })\r\n  ),\r\n};\r\n\r\nexport default ContactForm;\r\n","import PropTypes from \"prop-types\";\r\nimport s from \"./ButtonTypeButton.module.scss\";\r\n\r\nconst Button = ({ children, onClick }) => (\r\n  <button type=\"button\" className={s.button} onClick={onClick}>\r\n    {children}\r\n  </button>\r\n);\r\n\r\nButton.defaultProps = {\r\n  onClick: () => null,\r\n  children: null,\r\n};\r\n\r\nButton.propTypes = {\r\n  onClick: PropTypes.func,\r\n  children: PropTypes.node,\r\n};\r\n\r\nexport default Button;\r\n","import PropTypes from \"prop-types\";\r\nimport { BsFillPersonFill } from \"react-icons/bs\";\r\nimport s from \"./ContactItem.module.scss\";\r\n\r\nconst ContactItem = ({ name, number }) => (\r\n  <div className={s.wrapper}>\r\n    <BsFillPersonFill size=\"28\" fill=\"#87CEEB\" />\r\n    <p className={s.contact}>{name}</p>\r\n    <p className={s.contact}>{number}</p>\r\n  </div>\r\n);\r\n\r\nContactItem.propTypes = {\r\n  number: PropTypes.string.isRequired,\r\n  name: PropTypes.string.isRequired,\r\n};\r\n\r\nexport default ContactItem;\r\n","import PropTypes from \"prop-types\";\r\nimport { ImBin } from \"react-icons/im\";\r\nimport { useSelector, useDispatch } from \"react-redux\";\r\nimport { getVisibleContacts } from \"../../redux/contacts/contacts-selectors\";\r\nimport contactsActions from \"../../redux/contacts/contacts-actions\";\r\nimport Button from \"../Button/ButtonTypeButton\";\r\nimport ContactItem from \"../ContactItem/ContactItem\";\r\nimport s from \"./ContactList.module.scss\";\r\n\r\nconst ContactList = () => {\r\n  const contacts = useSelector(getVisibleContacts);\r\n  const dispatch = useDispatch();\r\n  const onDeleteContact = (name) =>\r\n    dispatch(contactsActions.deleteContact(name));\r\n\r\n  return (\r\n    <ul className={s.list}>\r\n      {contacts.map(({ id, name, number }) => (\r\n        <li className={s.item} key={id}>\r\n          <ContactItem name={name} number={number} />\r\n          <Button onClick={() => onDeleteContact(name)}>\r\n            <ImBin /> Delete\r\n          </Button>\r\n        </li>\r\n      ))}\r\n    </ul>\r\n  );\r\n};\r\n\r\nContactList.propTypes = {\r\n  contacts: PropTypes.arrayOf(\r\n    PropTypes.shape({\r\n      id: PropTypes.string.isRequired,\r\n    })\r\n  ),\r\n};\r\n\r\nexport default ContactList;\r\n","import { useSelector, useDispatch } from \"react-redux\";\r\nimport contactsActions from \"../../redux/contacts/contacts-actions\";\r\nimport { getFilter } from \"../../redux/contacts/contacts-selectors\";\r\nimport s from \"./Filter.module.scss\";\r\n\r\nconst Filter = () => {\r\n  const value = useSelector(getFilter);\r\n  const dispatch = useDispatch();\r\n\r\n  return (\r\n    <label className={s.label}>\r\n      <span className={s.labelText}>Find contacts by name</span>\r\n      <input\r\n        className={s.input}\r\n        type=\"text\"\r\n        value={value}\r\n        onChange={(e) => dispatch(contactsActions.changeFilter(e.target.value))}\r\n      ></input>\r\n    </label>\r\n  );\r\n};\r\n\r\nexport default Filter;\r\n","import PropTypes from \"prop-types\";\r\nimport s from \"./Section.module.scss\";\r\n\r\nconst Section = ({ title, children }) => (\r\n  <div className={s.section}>\r\n    <h2 className={s.title}>{title}</h2>\r\n    {children}\r\n  </div>\r\n);\r\n\r\nSection.propTypes = {\r\n  title: PropTypes.string.isRequired,\r\n  children: PropTypes.node.isRequired,\r\n};\r\n\r\nexport default Section;\r\n","//import React, { useState, useEffect } from \"react\";\nimport Container from \"../Container/Container\";\nimport ContactForm from \"../ContactForm/ContactForm\";\nimport ContactList from \"../ContactList/ContactList\";\nimport Filter from \"../Filter/Filter\";\nimport Section from \"../Section/Section\";\n\nfunction App() {\n  return (\n    <Container>\n      <Section title=\"Phonebook\">\n        <ContactForm />\n      </Section>\n      <Section title=\"Contacts\">\n        <Filter />\n        <ContactList />\n      </Section>\n    </Container>\n  );\n}\n\nexport default App;\n","import Loader from \"react-loader-spinner\";\r\nimport s from \"./Loader.module.scss\";\r\n\r\nconst LoaderContainer = () => {\r\n  return (\r\n    <div className={s.loaderContainer}>\r\n      <Loader\r\n        type=\"Circles\"\r\n        color=\"#008b8b\"\r\n        height={100}\r\n        width={100}\r\n        timeout={3000}\r\n      />\r\n    </div>\r\n  );\r\n};\r\n\r\nexport default LoaderContainer;\r\n","import React from \"react\";\nimport ReactDOM from \"react-dom\";\nimport \"modern-normalize/modern-normalize.css\";\nimport \"./styles/base.module.scss\";\nimport { Provider } from \"react-redux\";\nimport { PersistGate } from \"redux-persist/integration/react\";\nimport store from \"./redux/store\";\nimport App from \"./components/App/App\";\nimport Loader from \"./components/Loader/Loader\";\n\nReactDOM.render(\n  <React.StrictMode>\n    <Provider store={store.store}>\n      <PersistGate loading={<Loader />} persistor={store.persistor}>\n        <App />\n      </PersistGate>\n    </Provider>\n  </React.StrictMode>,\n  document.getElementById(\"root\")\n);\n","// extracted by mini-css-extract-plugin\nmodule.exports = {\"button\":\"ContactForm_button__2mLY_\",\"label\":\"ContactForm_label__Ype0z\",\"labelText\":\"ContactForm_labelText__1qcO-\",\"input\":\"ContactForm_input__1Cdfe\"};"],"sourceRoot":""}